buildscript {
	ext {
		kotlinVersion = '1.3.72'
		coroutinesVersion = "1.3.7"
		protobufPlugInVersion = '0.8.12'
		protobufVersion = '3.12.2'
		grpcVersion = '1.29.0'
		grpcKotlinVersion = '0.1.3'
		springBootVersion = '2.3.1.RELEASE'
		springDependencyManagementVersion = '1.0.9.RELEASE'
		springmockkVersion = '2.0.2'
		swaggerVersion = '2.10.5'
	}

	repositories {
		mavenCentral()
		jcenter()
	}

	dependencies {
		classpath "com.google.protobuf:protobuf-gradle-plugin:${protobufPlugInVersion}"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
	}
}

plugins {
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
	id 'com.google.protobuf' version "${protobufPlugInVersion}"
	id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}"
	id 'org.jetbrains.kotlin.plugin.spring' version "${kotlinVersion}"

	id 'application'
	id 'idea'
}

group = "com.github.callibrity"
java.sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
	mavenCentral()
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.23.0'
		}

		grpckt {
			artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpcKotlinVersion"
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.plugins {
				grpc {}
				grpckt {}
			}
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'

	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$coroutinesVersion"

	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
	testImplementation 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation "com.ninja-squad:springmockk:${springmockkVersion}"
	testImplementation 'io.projectreactor:reactor-test'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// grpc
	implementation "com.google.protobuf:protobuf-java:$protobufVersion"
	implementation "com.google.protobuf:protobuf-java-util:$protobufVersion"
	implementation "io.grpc:grpc-netty-shaded:$grpcVersion"
	implementation "io.grpc:grpc-protobuf:$grpcVersion"
	implementation "io.grpc:grpc-stub:$grpcVersion"
	implementation "io.grpc:grpc-kotlin-stub:$grpcKotlinVersion"
	implementation "io.grpc:grpc-services:$grpcVersion"

	compile group: 'com.google.inject', name: 'guice', version: '4.2.2'

	compile group: 'io.springfox', name: 'springfox-swagger2', version: "${swaggerVersion}"
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: "${swaggerVersion}"
	compile group: 'io.springfox', name: 'springfox-spring-webflux', version: "${swaggerVersion}"
}

tasks.withType(Test) {
	useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

idea {
	module {
		sourceDirs += file("${projectDir}/src/generated/main/java")
		sourceDirs += file("${projectDir}/src/generated/main/grpc")
	}
}
