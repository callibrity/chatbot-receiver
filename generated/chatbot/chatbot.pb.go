// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: chatbot.proto

package chatbot

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *HeartBeat) Reset() {
	*x = HeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatbot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat) ProtoMessage() {}

func (x *HeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_chatbot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat.ProtoReflect.Descriptor instead.
func (*HeartBeat) Descriptor() ([]byte, []int) {
	return file_chatbot_proto_rawDescGZIP(), []int{0}
}

func (x *HeartBeat) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type ChatbotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	User     string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Channel  string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *ChatbotRequest) Reset() {
	*x = ChatbotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatbot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatbotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatbotRequest) ProtoMessage() {}

func (x *ChatbotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatbot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatbotRequest.ProtoReflect.Descriptor instead.
func (*ChatbotRequest) Descriptor() ([]byte, []int) {
	return file_chatbot_proto_rawDescGZIP(), []int{1}
}

func (x *ChatbotRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *ChatbotRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ChatbotRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type ChatbotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *ChatbotResponse) Reset() {
	*x = ChatbotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatbot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatbotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatbotResponse) ProtoMessage() {}

func (x *ChatbotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatbot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatbotResponse.ProtoReflect.Descriptor instead.
func (*ChatbotResponse) Descriptor() ([]byte, []int) {
	return file_chatbot_proto_rawDescGZIP(), []int{2}
}

func (x *ChatbotResponse) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

var File_chatbot_proto protoreflect.FileDescriptor

var file_chatbot_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x22, 0x23, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5a, 0x0a,
	0x0e, 0x43, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x29, 0x0a, 0x0f, 0x43, 0x68, 0x61,
	0x74, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x32, 0x80, 0x01, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x42, 0x65, 0x61, 0x74, 0x12, 0x12, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2e, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x62,
	0x6f, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x39, 0x0a, 0x04,
	0x63, 0x68, 0x61, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x28, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x50, 0x01, 0x5a, 0x11,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chatbot_proto_rawDescOnce sync.Once
	file_chatbot_proto_rawDescData = file_chatbot_proto_rawDesc
)

func file_chatbot_proto_rawDescGZIP() []byte {
	file_chatbot_proto_rawDescOnce.Do(func() {
		file_chatbot_proto_rawDescData = protoimpl.X.CompressGZIP(file_chatbot_proto_rawDescData)
	})
	return file_chatbot_proto_rawDescData
}

var file_chatbot_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chatbot_proto_goTypes = []interface{}{
	(*HeartBeat)(nil),       // 0: chatbot.HeartBeat
	(*ChatbotRequest)(nil),  // 1: chatbot.ChatbotRequest
	(*ChatbotResponse)(nil), // 2: chatbot.ChatbotResponse
}
var file_chatbot_proto_depIdxs = []int32{
	0, // 0: chatbot.ChatbotService.heartBeat:input_type -> chatbot.HeartBeat
	1, // 1: chatbot.ChatbotService.chat:input_type -> chatbot.ChatbotRequest
	0, // 2: chatbot.ChatbotService.heartBeat:output_type -> chatbot.HeartBeat
	2, // 3: chatbot.ChatbotService.chat:output_type -> chatbot.ChatbotResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chatbot_proto_init() }
func file_chatbot_proto_init() {
	if File_chatbot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chatbot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatbot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatbotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatbot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatbotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chatbot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chatbot_proto_goTypes,
		DependencyIndexes: file_chatbot_proto_depIdxs,
		MessageInfos:      file_chatbot_proto_msgTypes,
	}.Build()
	File_chatbot_proto = out.File
	file_chatbot_proto_rawDesc = nil
	file_chatbot_proto_goTypes = nil
	file_chatbot_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatbotServiceClient is the client API for ChatbotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatbotServiceClient interface {
	HeartBeat(ctx context.Context, in *HeartBeat, opts ...grpc.CallOption) (*HeartBeat, error)
	Chat(ctx context.Context, in *ChatbotRequest, opts ...grpc.CallOption) (*ChatbotResponse, error)
}

type chatbotServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatbotServiceClient(cc grpc.ClientConnInterface) ChatbotServiceClient {
	return &chatbotServiceClient{cc}
}

func (c *chatbotServiceClient) HeartBeat(ctx context.Context, in *HeartBeat, opts ...grpc.CallOption) (*HeartBeat, error) {
	out := new(HeartBeat)
	err := c.cc.Invoke(ctx, "/chatbot.ChatbotService/heartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatbotServiceClient) Chat(ctx context.Context, in *ChatbotRequest, opts ...grpc.CallOption) (*ChatbotResponse, error) {
	out := new(ChatbotResponse)
	err := c.cc.Invoke(ctx, "/chatbot.ChatbotService/chat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatbotServiceServer is the server API for ChatbotService service.
type ChatbotServiceServer interface {
	HeartBeat(context.Context, *HeartBeat) (*HeartBeat, error)
	Chat(context.Context, *ChatbotRequest) (*ChatbotResponse, error)
}

// UnimplementedChatbotServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatbotServiceServer struct {
}

func (*UnimplementedChatbotServiceServer) HeartBeat(context.Context, *HeartBeat) (*HeartBeat, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HeartBeat not implemented")
}
func (*UnimplementedChatbotServiceServer) Chat(context.Context, *ChatbotRequest) (*ChatbotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Chat not implemented")
}

func RegisterChatbotServiceServer(s *grpc.Server, srv ChatbotServiceServer) {
	s.RegisterService(&_ChatbotService_serviceDesc, srv)
}

func _ChatbotService_HeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartBeat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatbotServiceServer).HeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatbot.ChatbotService/HeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatbotServiceServer).HeartBeat(ctx, req.(*HeartBeat))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatbotService_Chat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatbotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatbotServiceServer).Chat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatbot.ChatbotService/Chat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatbotServiceServer).Chat(ctx, req.(*ChatbotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatbotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chatbot.ChatbotService",
	HandlerType: (*ChatbotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "heartBeat",
			Handler:    _ChatbotService_HeartBeat_Handler,
		},
		{
			MethodName: "chat",
			Handler:    _ChatbotService_Chat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chatbot.proto",
}
